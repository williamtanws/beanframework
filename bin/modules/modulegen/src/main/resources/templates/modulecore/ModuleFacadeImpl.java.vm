package ${modulegroup}.${moduleartifact}core.facade;

import java.util.List;
import java.util.Map;
import java.util.UUID;

import org.springframework.data.domain.Page;
import org.springframework.stereotype.Component;

import com.beanframework.common.data.DataTableRequest;
import com.beanframework.common.exception.BusinessException;
import com.beanframework.core.facade.AbstractFacade;
import ${modulegroup}.${moduleartifact}.domain.${Moduleartifact};
import ${modulegroup}.${moduleartifact}core.data.${Moduleartifact}Dto;
import ${modulegroup}.${moduleartifact}core.specification.${Moduleartifact}Specification;

@Component
public class ${Moduleartifact}FacadeImpl extends AbstractFacade<${Moduleartifact}, ${Moduleartifact}Dto> implements ${Moduleartifact}Facade {
	
	private static final Class<${Moduleartifact}> entityClass = ${Moduleartifact}.class;
	private static final Class<${Moduleartifact}Dto> dtoClass = ${Moduleartifact}Dto.class;

	@Override
	public ${Moduleartifact}Dto findOneByUuid(UUID uuid) throws Exception {
		return findOneByUuid(uuid, entityClass, dtoClass);
	}

	@Override
	public ${Moduleartifact}Dto findOneProperties(Map<String, Object> properties) throws Exception {
		return findOneProperties(properties, entityClass, dtoClass);
	}

	@Override
	public ${Moduleartifact}Dto create(${Moduleartifact}Dto model) throws BusinessException {
		return save(model, entityClass, dtoClass);
	}

	@Override
	public ${Moduleartifact}Dto update(${Moduleartifact}Dto model) throws BusinessException {
		return save(model, entityClass, dtoClass);
	}

	@Override
	public void delete(UUID uuid) throws BusinessException {
		delete(uuid, entityClass);
	}

	@Override
	public Page<${Moduleartifact}Dto> findPage(DataTableRequest dataTableRequest) throws Exception {
		return findPage(dataTableRequest, ${Moduleartifact}Specification.getPageSpecification(dataTableRequest), entityClass, dtoClass);
	}

	@Override
	public int count() throws Exception {
		return count(entityClass);
	}

	@Override
	public List<Object[]> findHistory(DataTableRequest dataTableRequest) throws Exception {
		return findHistory(dataTableRequest, entityClass, dtoClass);
	}

	@Override
	public int countHistory(DataTableRequest dataTableRequest) throws Exception {
		return findCountHistory(dataTableRequest, entityClass);
	}

	@Override
	public ${Moduleartifact}Dto createDto() throws Exception {
		return createDto(entityClass, dtoClass);
	}
}
